# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: tests

on: 
  push:
    branches:
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest]
        python-version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Linux libraries
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 \
            libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 \
            libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0 pkg-config \
            libegl1
          
      # tox-conda: https://github.com/tox-dev/tox-conda
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
          
      - name: Test with tox
        run: tox
        env:
          PLATFORM: ${{ matrix.platform }}    
      # ONLY UNCOMMENT SECTION BELOW FOR DEBUGGING PURPOSES: allows one to ssh into host machine. 
      # Follow instructions in  https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account 
      # to add your ssh keys.
      # - name: Job failed. Activating debugging mode via up-term.
      #   if: ${{ failure() }}
      #   # As of Dec. 2024, The following action does NOT work for MACOS (https://github.com/lhotari/action-upterm/issues/24)
      #   # uses: lhotari/action-upterm@v1
      #   # with:
      #   #   ## limits ssh access and adds the ssh public key for the user which triggered the workflow
      #   #    limit-access-to-actor: true
      #   #   ## limits ssh access and adds the ssh public keys of the listed GitHub users
      #   #    limit-access-to-users: chriski777 #, carsen-stringera
        
      #   # As of Dec. 2024, use the following for debugging the GitHub Action runners for MacOS
      #   uses: owenthereal/action-upterm@v1
      #   with:
      #      limit-access-to-actor: true
      #      limit-access-to-users: chriski777   
           
      - name: Coverage
        # Only run coverage once
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v1

  deploy:
    # this will run when you have tagged a commit, starting with "v*"
    # and requires that you have put your twine API key in your 
    # github secrets (see readme for details)
    needs: [test]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools setuptools_scm wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
        run: |
          git tag
          python setup.py sdist bdist_wheel
          twine upload dist/*
